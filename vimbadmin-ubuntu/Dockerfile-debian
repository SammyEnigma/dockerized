# This file might be outdated, see https://github.com/eilandert/dockerized/tree/master/vimbadmin-ubuntu for a recent one

FROM	eilandert/apache-phpfpm:deb-8.0
LABEL	maintainer="Thijs Eilander <eilander@myguard.nl>"
ENV     DEBIAN_FRONTEND="noninteractive"
ENV	LD_PRELOAD=""
ENV	INSTALL_PATH=/opt/vimbadmin

COPY	bootstrap.sh /bootstrap.sh

RUN set -ex ;\
    apt-get update && apt-get -y install --no-install-recommends curl unzip ca-certificates ;\
    mkdir -p ${INSTALL_PATH} ;\
    curl -fSL https://github.com/opensolutions/ViMbAdmin/archive/master.tar.gz | \
      tar xz --strip-components=1 -C ${INSTALL_PATH} ;\
    cd ${INSTALL_PATH} ;\
    sed -i s/chmod/d /etc/php/8.0/php-snuffleupagus/default_php8.rules ;\
    rm -rf /etc/php && cp -r /etc/php.orig /etc/php ;\
#    rm composer.lock ;\
    composer config -g secure-http false ;\
#    composer require doctrine/orm -W --prefer-dist ;\
    composer update --prefer-dist --no-dev ;\
    composer clear-cache ;\
    rm -rf /etc/php && mkdir -p /etc/php ;\
    echo "Include ${INSTALL_PATH}/application/configs/httpd.conf" > /etc/apache2.orig/sites-enabled/000-default.conf ;\
    echo "php_admin_flag[opcache.enable] = 1" >> /etc/php.orig/${PHPVERSION}/fpm/pool.d/www.conf ;\
    echo "php_admin_value[opcache.jit_buffer_size]=64M" >> /etc/php.orig/${PHPVERSION}/fpm/pool.d/www.conf ;\
    echo "php_admin_value[memory_limit]=64M" >> /etc/php.orig/${PHPVERSION}/fpm/pool.d/www.conf ;\
    echo "php_admin_flag[display_errors]=Off" >> /etc/php.orig/${PHPVERSION}/fpm/pool.d/www.conf ;\
    apt-get -y purge curl git unzip mailutils nullmailer ;\
    apt-get -y autoremove && apt-get -y clean && apt-get -y autoclean ;\
    rm -rf /var/lib/apt/lists/*  ;\
    rm -rf ${INSTALL_PATH}/.git /root/.composer /root/.cache /root/.local ;\
    rm ${INSTALL_PATH}/application/configs/application.ini.vagrant ;\
    chown -R www-data:www-data ${INSTALL_PATH}/var ;\
    sed -i 's/defaults.mailbox.password_scheme\ \= \"dovecot:BLF-CRYPT\"/defaults.mailbox.password_scheme\ \= \"crypt:sha512"/' ${INSTALL_PATH}/application/configs/application.ini.dist ;\
    echo "[docker : production]" >> ${INSTALL_PATH}/application/configs/application.ini ;\
    cp ${INSTALL_PATH}/application/configs/application.ini.dist ${INSTALL_PATH}/application/configs/application.ini ;\
    cp -rp ${INSTALL_PATH}/application/configs ${INSTALL_PATH}/application/configs.orig ;\
    chmod +x /bootstrap.sh

COPY httpd.conf ${INSTALL_PATH}/application/configs.orig/

WORKDIR /opt/vimbadmin
CMD "/bootstrap.sh"

EXPOSE 80/TCP
